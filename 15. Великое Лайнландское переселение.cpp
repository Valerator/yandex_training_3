// Лайнландия представляет из себя одномерный мир, являющийся прямой, на котором располагаются N городов, последовательно пронумерованных от 0 до N - 1 . 
// Направление в сторону от первого города к нулевому названо западным, а в обратную — восточным.
// Когда в Лайнландии неожиданно начался кризис, все были жители мира стали испытывать глубокое смятение. По всей Лайнландии стали ходить слухи, что на
// востоке живётся лучше, чем на западе.
// Так и началось Великое Лайнландское переселение. Обитатели мира целыми городами отправились на восток, покинув родные улицы, и двигались до тех пор, пока
// не приходили в город, в котором средняя цена проживания была меньше, чем в родном.

// Формат ввода
// В первой строке дано одно число N (2 ≤ N ≤ 10^5) — количество городов в Лайнландии. Во второй строке дано N чисел ai(0 ≤ ai ≤ 10^9) — средняя цена 
// проживания в городах с нулевого по (N - 1)-ый соответственно.
  
// Формат вывода
// Для каждого города в порядке с нулевого по (N - 1)-ый выведите номер города, в который переселятся его изначальные жители. Если жители города не 
// остановятся в каком-либо другом городе, отправившись в Восточное Бесконечное Ничто, выведите -1 .


#include <iostream>
#include <vector>
#include <stack>

int main() {
    int N;
    std::cin >> N;
    int input[N];
    for(int i = 0; i < N; i++) {
        std::cin >> input[i];
    }
    int n = sizeof(input) / sizeof(input[0]);
    std::stack<int> nums;
	nums.push(-1);
	std::stack<int> costs;
	costs.push(-1);

	std::vector<int> ans(n, -1);
	for (int i = 0; i < n; ++i) {
		int cost = input[i];
		while (cost < costs.top()) {
			ans[nums.top()] = i;
			costs.pop();
			nums.pop();
		}
		costs.push(cost);
		nums.push(i);
	}
	for (int i = 0; i < n; ++i)
		std::cout << ans[i] << " ";
	std::cout << std::endl;
}
